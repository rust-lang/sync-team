name: Dry Run

on:
  push:
  workflow_dispatch:
  schedule:
    # Run the dry run every 4 hours
    - cron: "0 */4 * * *"

jobs:
  generate-tokens:
    name: Generate tokens
    runs-on: ubuntu-24.04
    outputs:
      rust-lang: ${{ steps.export-token.outputs.rust-lang }}
      rust-lang-ci: ${{ steps.export-token.outputs.rust-lang-ci }}
      rust-lang-deprecated: ${{ steps.export-token.outputs.rust-lang-deprecated }}
      rust-lang-nursery: ${{ steps.export-token.outputs.rust-lang-nursery }}
      bors-rs: ${{ steps.export-token.outputs.bors-rs }}
      rust-analyzer: ${{ steps.export-token.outputs.rust-analyzer }}
      rust-embedded: ${{ steps.export-token.outputs.rust-embedded }}
      rust-dev-tools: ${{ steps.export-token.outputs.rust-dev-tools }}
    if: ${{ github.repository_owner == 'rust-lang' }}
    strategy:
      matrix:
        owner:
          - rust-lang
          - rust-lang-ci
          - rust-lang-deprecated
          - rust-lang-nursery
          - bors-rs
          - rust-analyzer
          - rust-embedded
          - rust-dev-tools
    steps:
      - name: Generate GitHub token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          # GitHub App ID secret name
          app-id: ${{ secrets.GH_APP_ID }}
          # GitHub App private key secret name
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          # Set the owner, so the token can be used in all repositories
          owner: ${{ matrix.owner }}
      - name: Export token
        id: export-token
        run: |
          echo "${{ matrix.owner }}=${{ steps.generate-token.outputs.token }}" >> $GITHUB_OUTPUT
          echo "${{ matrix.owner }}=${{ steps.generate-token.outputs.token }}"
  dry-run:
    name: Run sync-team dry-run
    needs: [ generate-tokens ]
    runs-on: ubuntu-24.04
    if: ${{ github.repository_owner == 'rust-lang' }}
    steps:
      - uses: actions/checkout@v4
        with:
          # We don't need to do authenticated `git` operations, since we use the GitHub API.
          persist-credentials: false

      - name: Debug
        run: echo '${{ toJSON(needs.generate-tokens.outputs) }}'

      - name: Dry run
        env:
          GITHUB_TOKEN_RUST_LANG: ${{ needs.generate-tokens.outputs.rust-lang }}
          GITHUB_TOKEN_RUST_LANG_CI: ${{ needs.generate-tokens.outputs.rust-lang-ci }}
          GITHUB_TOKEN_RUST_LANG_DEPRECATED: ${{ needs.generate-tokens.outputs.rust-lang-deprecated }}
          GITHUB_TOKEN_RUST_LANG_NURSERY: ${{ needs.generate-tokens.outputs.rust-lang-nursery }}
          GITHUB_TOKEN_BORS_RS: ${{ needs.generate-tokens.outputs.bors-rs }}
          GITHUB_TOKEN_RUST_ANALYZER: ${{ needs.generate-tokens.outputs.rust-analyzer }}
          GITHUB_TOKEN_RUST_EMBEDDED: ${{ needs.generate-tokens.outputs.rust-embedded }}
          GITHUB_TOKEN_RUST_DEV_TOOLS: ${{ needs.generate-tokens.outputs.rust-dev-tools }}
        run: |
          printenv
          cargo run -- print-plan --services github
